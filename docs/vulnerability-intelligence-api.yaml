basePath: /
definitions:
  models.Format:
    enum:
    - NASL
    - NOTUS
    type: string
    x-enum-varnames:
    - NASLFormat
    - NOTUSFormat
  models.Meta:
    properties:
      AdvisoryXREF:
        type: string
      Affected:
        type: string
      Authentication:
        type: string
      CVEs:
        items:
          type: string
        type: array
      CVSS:
        type: string
      Category:
        type: string
      CreationDate:
        type: integer
      Dependencies:
        items:
          type: string
        type: array
      Deprecated:
        type: boolean
      DeprecationDate:
        type: integer
      DetectionType:
        type: string
      EnterpriseFeedOnly:
        type: boolean
      ExcludedKeys:
        items:
          type: string
        type: array
      Family:
        type: string
      Format:
        $ref: '#/definitions/models.Format'
      Impact:
        type: string
      Insight:
        type: string
      LastModification:
        type: integer
      MandatoryKeys:
        items:
          type: string
        type: array
      OID:
        type: string
      Preferences:
        items:
          $ref: '#/definitions/models.Preference'
        type: array
      QoD:
        type: integer
      QoDType:
        type: string
      RequiredKeys:
        items:
          type: string
        type: array
      RequiredTCPPorts:
        items:
          type: string
        type: array
      RequiredUDPPorts:
        items:
          type: string
        type: array
      SeverityDate:
        type: integer
      SeverityOrigin:
        type: string
      SeverityVector:
        type: string
      Solution:
        type: string
      SolutionMethod:
        type: string
      SolutionType:
        type: string
      Summary:
        type: string
      Timeout:
        type: integer
      Title:
        type: string
      VulDetect:
        type: string
      XREFs:
        items:
          type: string
        type: array
    type: object
  models.Preference:
    properties:
      class:
        type: string
      default:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  web.OpenSearchQuery:
    properties:
      query:
        $ref: '#/definitions/web.TermsQuery'
    type: object
  web.OpenSearchResult:
    properties:
      hits:
        items:
          $ref: '#/definitions/models.Meta'
        type: array
    type: object
  web.SQLQuery:
    properties:
      query:
        example: SELECT distinct Family FROM vts
        type: string
    type: object
  web.SQLResult:
    properties:
      dataRows:
        items:
          items:
            type: string
          type: array
        type: array
      schema:
        items:
          $ref: '#/definitions/web.SchemaItem'
        type: array
    type: object
  web.SchemaItem:
    properties:
      name:
        example: Family
        type: string
      type:
        example: keyword
        type: string
    type: object
  web.TermsQuery:
    properties:
      terms:
        additionalProperties:
          type: string
        example:
          CVEs: CVE-2023-28486
        type: object
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: HTTP API for Vulnerability Intelligence Data
  license:
    name: AGPL-3.0-or-later
  title: Vulnerability Intelligence Backend API
paths:
  /vts/{oid}:
    get:
      description: Get VT meta data for a specific OID
      parameters:
      - description: Authentication header
        example: Bearer eyJhbGciOiJSUzI1NiIs
        in: header
        name: Authorization
        required: true
        type: string
      - description: OID
        example: 1.3.6.1.4.1.25623.1.0.108560
        in: path
        name: oid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            api-version:
              description: API version
              type: string
          schema:
            $ref: '#/definitions/models.Meta'
      summary: Get VT meta data for a specific OID
  /vts/query:
    post:
      consumes:
      - application/json
      description: |-
        Retrieve all VT meta data that matches a search given in SQL syntax

        The response example is a simplified version of the actual responses.
      parameters:
      - description: Authentication header
        example: Bearer eyJhbGciOiJSUzI1NiIs
        in: header
        name: Authorization
        required: true
        type: string
      - description: SQL query
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/web.SQLQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            api-version:
              description: API version
              type: string
          schema:
            $ref: '#/definitions/web.SQLResult'
      summary: Retrieve VT meta data using SQL syntax
  /vts/search:
    post:
      consumes:
      - application/json
      description: |-
        Retrieve all VT meta data that matches a search given in OpenSearch's query DSL.

        The response example is a simplified version of the actual responses.
      parameters:
      - description: Authentication header
        example: Bearer eyJhbGciOiJSUzI1NiIs
        in: header
        name: Authorization
        required: true
        type: string
      - description: OpenSearch Query DSL
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/web.OpenSearchQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            api-version:
              description: API version
              type: string
          schema:
            $ref: '#/definitions/web.OpenSearchResult'
      summary: Retrieve VT meta data using OpenSearch query DSL
swagger: "2.0"
